// ----------------------
// Prisma Core
// ----------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ----------------------
// Enums
// ----------------------
enum Role {
  USER
  ADMIN
}

enum Weekday {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

enum HomeRowKind {
  food
  cafe
  beauty
  carcare
  events
  videos
  network
  custom
}

enum TrackingProvider {
  GA4
  GTM
  FacebookPixel
  TikTokPixel
  Custom
}

enum ScriptPlacement {
  HEAD
  BODY_START
  BODY_END
}

enum ScriptStrategy {
  beforeInteractive
  afterInteractive
  lazyOnload
}
// ----------------------
// Users & Auth
// ----------------------
model User {
  id            String   @id @default(cuid())
  name          String   @db.VarChar(191)
  email         String   @unique
  password_hash String
  role          Role     @default(USER)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  reviews       Review[]
  reviewReplies ReviewReply[]
  imageRatings  ImageRating[]
}

// ----------------------
// Category
// ----------------------
model Category {
  id           String   @id @default(cuid())
  name         String   @unique @db.VarChar(160)
  slug         String   @unique @db.VarChar(160)
  cover_image  String?
  image_url    String?
  order_number Int      @unique
  avg_review   Float    @default(0)

  stores Store[]

  @@index([name])
  @@index([slug])
}

// ----------------------
// Store (ธุรกิจหลัก)
// ----------------------
model Store {
  id              String   @id @default(cuid())
  name            String   @db.VarChar(120)
  slug            String   @unique @db.VarChar(160)
  description     String   @db.Text
  address         String   @db.VarChar(255)
  province        String?  @db.VarChar(100)

  latitude        Float?
  longitude       Float?
  phone           String?  @db.VarChar(50)
  email           String?  @db.VarChar(191)
  website         String?  @db.VarChar(255)
  social_links    Json?

  category_id     String
  order_number    Int

  cover_image     String?  @db.VarChar(512)
  image_fit       String   @default("cover") @db.VarChar(20)
  logo_url        String?  @db.VarChar(512)
  is_active       Boolean  @default(true)
  expired_at      DateTime?
  created_at      DateTime @default(now())
  renewal_count   Int      @default(0)
  updated_at      DateTime @updatedAt

  avg_rating      Float    @default(0)
  review_count    Int      @default(0)

  meta_title       String? @db.VarChar(255)
  meta_description String? @db.VarChar(255)
  og_image         String? @db.VarChar(512)

  category       Category                   @relation(fields: [category_id], references: [id])
  images         Image[]
  reviews        Review[]
  visitorCounter VisitorCounter?
  videos         Video[]
  branches       Branch[]
  openingHours   OpeningHour[]
  events         Event[]
  sustainability SustainabilityTagOnStore[]
  amenities      AmenityOnStore[]
  tracking       TrackingScript[]

  @@unique([category_id, order_number])
  @@index([category_id])
  @@index([is_active, avg_rating])
  @@map("stores")
}

// ----------------------
// Branch
// ----------------------
model Branch {
  id         String   @id @default(cuid())
  store_id   String
  name       String   @db.VarChar(120)
  address    String   @db.VarChar(255)
  latitude   Float?
  longitude  Float?
  phone      String? @db.VarChar(50)
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  store        Store         @relation(fields: [store_id], references: [id], onDelete: Cascade)
  openingHours OpeningHour[]

  @@index([store_id, is_active])
}

// ----------------------
// Opening Hours
// ----------------------
model OpeningHour {
  id        String  @id @default(cuid())
  store_id  String?
  branch_id String?
  day       Weekday
  openTime  String   @db.VarChar(8)
  closeTime String   @db.VarChar(8)
  isOpen    Boolean  @default(true)

  store  Store?  @relation(fields: [store_id], references: [id], onDelete: Cascade)
  branch Branch? @relation(fields: [branch_id], references: [id], onDelete: Cascade)

  @@index([store_id])
  @@index([branch_id])
  @@index([day, isOpen])
}

// ----------------------
// Reviews & Replies
// ----------------------
model Review {
  id         String       @id @default(cuid())
  user_id    String
  store_id   String
  rating     Int
  comment    String
  status     ReviewStatus @default(PENDING)
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  user    User          @relation(fields: [user_id], references: [id])
  store   Store         @relation(fields: [store_id], references: [id], onDelete: Cascade)
  replies ReviewReply[]

  @@index([store_id, status])
  @@index([user_id])
}

model ReviewReply {
  id         String   @id @default(cuid())
  review_id  String
  user_id    String
  comment    String
  created_at DateTime @default(now())

  review Review @relation(fields: [review_id], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [user_id], references: [id])

  @@index([review_id])
  @@index([user_id])
}

// ----------------------
// Images
// ----------------------
model Image {
  id                   String   @id @default(cuid())
  store_id             String
  image_url            String
  cloudinary_public_id String?
  order_number         Int
  alt_text             String? @db.VarChar(255)
  created_at           DateTime @default(now())

  is_featured_home     Boolean  @default(false)
  featured_order       Int?
  allow_review         Boolean  @default(false)
  menu_name            String? @db.VarChar(255)
  price                Int?
  rating               Float?   @default(0)
  rating_count         Int      @default(0)
  ratings              ImageRating[]

  store Store @relation(fields: [store_id], references: [id], onDelete: Cascade)

  @@unique([store_id, order_number])
  @@index([store_id])
  @@index([is_featured_home, featured_order])
  @@map("images")
}

// ----------------------
// Visitor Counters
// ----------------------
model VisitorCounter {
  id        String   @id @default(cuid())
  total     Int      @default(0)
  store     Store?   @relation(fields: [storeId], references: [id])
  storeId   String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebsiteVisitorCounter {
  id    String @id @default("singleton")
  total Int    @default(0)
}

// ----------------------
// Banners
// ----------------------
model Banner {
  id                   String   @id @default(cuid())
  image_url            String
  cloudinary_public_id String?
  title                String? @db.VarChar(255)
  alt_text             String? @db.VarChar(255)
  order                Int      @default(0)
  href                 String? @db.VarChar(255)
  is_active            Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @default(now()) @updatedAt

  @@index([is_active, order])
}

// ----------------------
// Videos
// ----------------------
model Video {
  id            String   @id @default(cuid())
  title         String   @db.VarChar(255)
  youtube_url   String?  @db.VarChar(512)
  tiktok_url    String?  @db.VarChar(512)
  thumbnail_url String?  @db.VarChar(512)
  order_number  Int      @default(0)
  is_active     Boolean  @default(true)
  start_date    DateTime?
  end_date      DateTime?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  store_id String?
  store    Store?  @relation(fields: [store_id], references: [id], onDelete: SetNull)

  @@index([is_active, start_date, end_date])
  @@index([store_id])
  @@map("videos")
}

// ----------------------
// Sustainability
// ----------------------
model SustainabilityTag {
  id     String                     @id @default(cuid())
  key    String                     @unique  @db.VarChar(64)
  name   String @db.VarChar(255)
  stores SustainabilityTagOnStore[]

  @@index([key])
}

model SustainabilityTagOnStore {
  store_id String
  tag_id   String
  store    Store             @relation(fields: [store_id], references: [id], onDelete: Cascade)
  tag      SustainabilityTag @relation(fields: [tag_id], references: [id], onDelete: Cascade)

  @@id([store_id, tag_id])
  @@index([tag_id])
}

// ----------------------
// Amenities
// ----------------------
model Amenity {
  id     String           @id @default(cuid())
  key    String           @unique
  name   String @db.VarChar(255)
  stores AmenityOnStore[]

  @@index([key])
}

model AmenityOnStore {
  store_id   String
  amenity_id String
  store      Store   @relation(fields: [store_id], references: [id], onDelete: Cascade)
  amenity    Amenity @relation(fields: [amenity_id], references: [id], onDelete: Cascade)

  @@id([store_id, amenity_id])
  @@index([amenity_id])
}

// ----------------------
// Events
// ----------------------
model Event {
  id          String    @id @default(cuid())
  store_id    String
  title       String @db.VarChar(255)
  description String @db.Text
  start_at    DateTime
  end_at      DateTime?
  cover_image String? @db.VarChar(512)
  is_active   Boolean   @default(true)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  store Store @relation(fields: [store_id], references: [id], onDelete: Cascade)

  @@index([store_id, start_at, is_active])
}

// ----------------------
// Homepage Settings
// ----------------------
model HomeSettings {
  id            String   @id @default("singleton")
  hero_title    String   @db.VarChar(255)
  hero_subtitle String   @db.VarChar(255)
  show_search   Boolean  @default(true)

  missions_title String? @db.VarChar(255)
  missions_items Json?

  updated_at    DateTime @updatedAt
}

model HomeRow {
  id            String       @id @default(cuid())
  kind          HomeRowKind
  title         String @db.VarChar(255)
  cta_text      String? @db.VarChar(255)
  cta_href      String? @db.VarChar(255)
  visible       Boolean      @default(true)
  order_number  Int          @default(0)

  images        Json?
  store_ids     Json?
  video_ids     Json?

  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@index([kind, visible, order_number])
}

// ----------------------
// Global SEO & Footer
// ----------------------
model SiteSeo {
  id               String   @id @default("global")
  meta_title       String?  @db.VarChar(255)
  meta_description String?  @db.VarChar(512)
  keywords         String?  @db.VarChar(512)
  og_image         String?  @db.VarChar(512)
  jsonld           Json?
  updated_at       DateTime @updatedAt
}

model SiteFooter {
  id          String   @id @default("singleton")
  about_text  String? @db.VarChar(255)
  address     String? @db.VarChar(255)
  phone       String? @db.VarChar(255)
  email       String? @db.VarChar(255)
  socials     Json?
  links       Json?
  locations   Json?
  hours       Json?
  updated_at  DateTime @updatedAt
}

model Homepage {
  id                String   @id @default("default")
  hero_title        String? @db.VarChar(255)
  hero_subtitle     String? @db.VarChar(255)
  missions          Json?
  missions_subtitle String? @db.VarChar(255)
  rows              Json?
  updated_at        DateTime @updatedAt
  created_at        DateTime @default(now())
}

model PageSeo {
  id          String  @id @default(cuid())
  path        String  @unique @db.VarChar(255)
  title       String? @db.VarChar(255)
  description String? @db.VarChar(512)
  og_image    String? @db.VarChar(512)
  og_images   Json?
  jsonld      Json?
  noindex     Boolean @default(false)
  updated_at  DateTime @updatedAt

  @@index([updated_at])
}

// ----------------------
// Tracking
// ----------------------
model TrackingScript {
  id         String           @id @default(cuid())
  provider   TrackingProvider
  trackingId String?          @db.VarChar(255)
  script     String?          @db.Text
  placement  ScriptPlacement  @default(HEAD)
  strategy   ScriptStrategy   @default(afterInteractive)
  enabled    Boolean          @default(true)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  // ✅ เพิ่ม storeId สำหรับผูกกับร้านค้า
  storeId    String?          @db.VarChar(255)
  store      Store?           @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@index([provider, enabled])
  @@index([storeId])
}

// ----------------------
// Ratings
// ----------------------
model ImageRating {
  id         String   @id @default(cuid())
  image_id   String
  user_id    String
  rating     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  image Image @relation(fields: [image_id], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([image_id, user_id])
  @@index([image_id])
  @@index([user_id])
  @@map("image_ratings")
}

// ----------------------
// Site Contact & Config
// ----------------------
model SiteContact {
  id           String   @id @default(cuid())
  store_name   String?  @db.VarChar(191)
  phone        String?  @db.VarChar(64)
  email        String?  @db.VarChar(191)
  facebook     String?  @db.VarChar(512)
  messenger    String?  @db.VarChar(512)
  line         String?  @db.VarChar(512)
  address      String?  @db.Text
  map_iframe   String?  @db.Text
  socials      Json?
  is_active    Boolean  @default(true)
  order_number Int      @default(0)
  updated_at   DateTime @updatedAt
  created_at   DateTime @default(now())

  @@index([is_active, order_number])
}

model SiteConfig {
  id                  String   @id @default("singleton")
  allow_user_login    Boolean  @default(false)
  maintenance_mode    Boolean  @default(false)
  maintenance_message String?  @db.VarChar(255)
  updated_at          DateTime @updatedAt
  created_at          DateTime @default(now())
}

model SiteBrand {
  id          String   @id @default("singleton")
  brandName   String?  @db.VarChar(255)
  themeColor  String?  @db.VarChar(16)
  manifestUrl String?  @db.VarChar(255)
  icon16      String?
  icon32      String?
  apple57     String?
  apple60     String?
  apple72     String?
  apple76     String?
  apple114    String?
  apple120    String?
  apple144    String?
  apple152    String?
  apple180    String?
  ogDefault   String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}